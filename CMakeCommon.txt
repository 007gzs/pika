SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated -g -D'GIT_COMMIT_ID=\"${GIT_COMMIT_ID}\"' -D'BUILD_TIME=\"${BUILD_TIME}\"'")

SET(CMAKE_CXX_STANDARD 17)

MESSAGE(STATUS "${PROJECT_NAME} staged install: ${STAGED_INSTALL_PREFIX}")
MESSAGE(STATUS "Current platform: ${OS_VERSION} ")
CMAKE_HOST_SYSTEM_INFORMATION(RESULT CPU_CORE QUERY NUMBER_OF_LOGICAL_CORES)
MESSAGE(STATUS "CPU core ${CPU_CORE}")

IF(${CMAKE_BUILD_TYPE} MATCHES "Release")
    message(STATUS "make RELEASE version")
    add_definitions(-DBUILD_RELEASE)
    SET(BuildType "Release")
ELSE()
    message(STATUS "make DEBUG version")
    add_definitions(-DBUILD_DEBUG)
    SET(BuildType "Debug")
ENDIF()

INCLUDE(FetchContent)

# leveldb
FETCHCONTENT_DECLARE(
    leveldb
    GIT_REPOSITORY https://github.com/google/leveldb.git
    GIT_TAG main
)
SET(LEVELDB_BUILD_TESTS OFF CACHE BOOL "" FORCE)
SET(LEVELDB_BUILD_BENCHMARKS OFF CACHE BOOL "" FORCE)
SET(LEVELDB_INSTALL OFF CACHE BOOL "" FORCE)
FETCHCONTENT_MAKEAVAILABLE(leveldb)

# spdlog
FETCHCONTENT_DECLARE(
    spdlog
    GIT_REPOSITORY https://github.com/gabime/spdlog.git
    GIT_TAG v1.9.0
)
FETCHCONTENT_MAKEAVAILABLE(spdlog)

# libevent
FETCHCONTENT_DECLARE(
    libevent
    GIT_REPOSITORY https://github.com/libevent/libevent.git
    GIT_TAG release-2.1.12-stable
)

SET(EVENT__DISABLE_THREAD_SUPPORT ON CACHE BOOL "" FORCE)
SET(EVENT__DISABLE_OPENSSL ON CACHE BOOL "" FORCE)
SET(EVENT__DISABLE_BENCHMARK ON CACHE BOOL "" FORCE)
SET(EVENT__DISABLE_TESTS ON CACHE BOOL "" FORCE)
SET(EVENT__DISABLE_REGRESS ON CACHE BOOL "" FORCE)
SET(EVENT__DISABLE_SAMPLES ON CACHE BOOL "" FORCE)
SET(EVENT__LIBRARY_TYPE STATIC CACHE STRING "" FORCE)
FETCHCONTENT_MAKEAVAILABLE(libevent)

# nodejs/llhttp
FETCHCONTENT_DECLARE(
    llhttp
    URL "https://github.com/nodejs/llhttp/archive/refs/tags/release/v6.0.5.tar.gz"
)
FETCHCONTENT_MAKEAVAILABLE(llhttp)
